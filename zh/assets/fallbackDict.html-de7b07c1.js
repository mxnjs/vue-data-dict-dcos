import{_ as e,r as t,o as p,c as o,a as n,b as s,d as l,e as c}from"./app-566fa296.js";const i={},r=n("h1",{id:"回退字典",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#回退字典","aria-hidden":"true"},"#"),s(" 回退字典")],-1),u=n("p",null,"回退字典用于设置所有字典实例选项属性回退值，内部会进行合并，通常可用作定义字典的公共属性或作为默认字典选项",-1),d=n("h2",{id:"metas",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#metas","aria-hidden":"true"},"#"),s(" metas['*']")],-1),k=n("ul",null,[n("li",null,"详细信息")],-1),v={href:"/api/config/dictOptions.html",target:"_blank",rel:"noopener noreferrer"},m=c(`<ul><li>示例</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pluginOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">metas</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;*&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">dictMeta</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">labelField</span><span class="token operator">:</span> <span class="token string">&#39;label&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">valueField</span><span class="token operator">:</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token literal-property property">lookup</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueDataDict<span class="token punctuation">,</span> pluginOptions<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function b(_,h){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,u,d,k,n("p",null,[s('回退字典选项是一个特殊的字典选型，字典类型名称为"*"，详细信息见'),n("a",v,[s("DictOptions"),l(a)])]),m])}const y=e(i,[["render",b],["__file","fallbackDict.html.vue"]]);export{y as default};
